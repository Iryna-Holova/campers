{"version":3,"file":"static/js/29.24d4929d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/CatalogPage.jsx","api/adverts.js","store/campers/thunks.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Filter_wrapper__9Ksqy\",\"title\":\"Filter_title__pSkfx\",\"location\":\"Filter_location__3ujAf\",\"field\":\"Filter_field__IlYZE\",\"select\":\"Filter_select__QmVYV\",\"selected\":\"Filter_selected__bpT2w\",\"unapplied\":\"Filter_unapplied__PBLSL\",\"location_icon\":\"Filter_location_icon__0jWiP\",\"location_clear\":\"Filter_location_clear__VhcbW\",\"filters_wrapper\":\"Filter_filters_wrapper__i2T28\",\"subtitle\":\"Filter_subtitle__fcbnU\",\"filters\":\"Filter_filters__n5Vfb\",\"filter\":\"Filter_filter__vxThR\",\"checkbox_group\":\"Filter_checkbox_group__DxgIe\",\"checkbox_hidden\":\"Filter_checkbox_hidden__dK4as\",\"label\":\"Filter_label__vEd1E\",\"inactive\":\"Filter_inactive__wSV8X\",\"active\":\"Filter_active__IaDX0\",\"buttons\":\"Filter_buttons__8hS8y\"};","import { Field, Form, Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport {\n  selectFilterValues,\n  selectIsEquipmentFilterActive,\n  selectIsFilterActive,\n  selectIsLoading,\n} from 'store/selectors';\nimport { EQUIPMENT_FILTER, FORMS, ICONS, LOCATIONS } from 'constants/campers';\nimport icons from '../../images/sprite.svg';\nimport ButtonLink from 'components/ButtonLink/ButtonLink';\nimport css from './Filter.module.css';\n\nconst INITIAL_VALUES = {\n  location: '',\n  transmission: [],\n  equipment: [],\n  form: null,\n};\n\nconst Filter = ({ onSearch, onReset }) => {\n  const isFilterActive = useSelector(selectIsFilterActive);\n  const currentValues = useSelector(selectFilterValues);\n  const isEquipmentFilterActive = useSelector(selectIsEquipmentFilterActive);\n  const isLoading = useSelector(selectIsLoading);\n  const { location, transmission, equipment, form } = currentValues;\n\n  return (\n    <div className={css.wrapper}>\n      <h2 className=\"visually-hidden\">Filter Vehicles</h2>\n      <Formik\n        initialValues={{\n          location: location || '',\n          transmission: transmission ? [transmission] : [],\n          equipment,\n          form,\n        }}\n        onSubmit={values => {\n          if (\n            !values.location &&\n            !values.transmission.length &&\n            !values.equipment.length &&\n            !values.form\n          ) {\n            if (!isFilterActive) return;\n            onReset();\n          } else if (\n            values.location === (location ?? '') &&\n            values.transmission[0] === transmission &&\n            values.equipment.length === equipment.length &&\n            values.equipment.every(item => equipment.includes(item)) &&\n            values.form === form\n          ) {\n            return;\n          } else {\n            onSearch({\n              location: values.location || null,\n              transmission: values.transmission[0] || null,\n              equipment: values.equipment,\n              form: values.form,\n            });\n          }\n        }}\n        onReset={async () => {\n          if (isFilterActive) await onReset();\n        }}\n      >\n        {({ values, setFieldValue, resetForm }) => (\n          <Form>\n            <div className={css.location}>\n              <h3 className={css.title}>Location</h3>\n              <div className={css.field}>\n                <Field\n                  name=\"location\"\n                  as=\"select\"\n                  className={`${css.select} ${\n                    values.location ? css.selected : ''\n                  } ${\n                    values.location !== (location ?? '') ? css.unapplied : ''\n                  }`}\n                >\n                  <option value=\"\" disabled hidden>\n                    City\n                  </option>\n                  {LOCATIONS.map((location, idx) => (\n                    <option key={idx} value={location}>\n                      {location.split(', ').reverse().join(', ')}\n                    </option>\n                  ))}\n                </Field>\n                <svg width={20} height={20} className={css.location_icon}>\n                  <use href={icons + '#icon-location'} />\n                </svg>\n                <button\n                  type=\"button\"\n                  onClick={() => setFieldValue('location', '')}\n                  className={css.location_clear}\n                >\n                  <svg width={20} height={20}>\n                    <use href={icons + '#icon-close'} />\n                  </svg>\n                </button>\n              </div>\n            </div>\n            <div className={css.filters_wrapper}>\n              <h3 className={css.title}>Filters</h3>\n              <div className={css.filters}>\n                <div className={css.filter}>\n                  <div id=\"equipment-group\" className={css.subtitle}>\n                    Vehicle equipment\n                  </div>\n                  <div\n                    role=\"group\"\n                    aria-labelledby=\"equipment-group\"\n                    className={css.checkbox_group}\n                  >\n                    <label\n                      className={`${css.label} ${\n                        isEquipmentFilterActive\n                          ? transmission === 'automatic'\n                            ? css.active\n                            : css.inactive\n                          : css.unapplied\n                      }`}\n                    >\n                      <Field\n                        type=\"checkbox\"\n                        name=\"transmission\"\n                        value=\"automatic\"\n                        className={css.checkbox_hidden}\n                      />\n                      <svg width={32} height={32}>\n                        <use href={`${icons}#icon-transmission`} />\n                      </svg>\n                      Automatic\n                    </label>\n                    {Object.entries(EQUIPMENT_FILTER).map(\n                      ([key, value], idx) => (\n                        <label\n                          key={idx}\n                          className={`${css.label} ${\n                            isEquipmentFilterActive\n                              ? equipment.includes(key)\n                                ? css.active\n                                : css.inactive\n                              : css.unapplied\n                          }`}\n                        >\n                          <Field\n                            type=\"checkbox\"\n                            name=\"equipment\"\n                            value={key}\n                            className={css.checkbox_hidden}\n                          />\n                          <svg width={32} height={32}>\n                            <use href={icons + ICONS[value]} />\n                          </svg>\n                          {value}\n                        </label>\n                      )\n                    )}\n                  </div>\n                </div>\n                <div className={css.filter}>\n                  <div id=\"radio-group\" className={css.subtitle}>\n                    Vehicle type\n                  </div>\n                  <div\n                    role=\"group\"\n                    aria-labelledby=\"radio-group\"\n                    className={css.checkbox_group}\n                  >\n                    {Object.entries(FORMS).map(([key, value], idx) => (\n                      <label\n                        key={idx}\n                        className={`${css.label} ${\n                          form\n                            ? form === key\n                              ? css.active\n                              : css.inactive\n                            : css.unapplied\n                        }`}\n                      >\n                        <Field\n                          type=\"radio\"\n                          name=\"form\"\n                          value={key}\n                          className={css.checkbox_hidden}\n                        />\n                        <svg width={40} height={28}>\n                          <use href={`${icons}#icon-${key}`} />\n                        </svg>\n                        {value}\n                      </label>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={css.buttons}>\n              <ButtonLink type=\"submit\" disabled={isLoading}>\n                Search\n              </ButtonLink>\n              <ButtonLink\n                type=\"reset\"\n                onClick={() =>\n                  resetForm({\n                    values: INITIAL_VALUES,\n                  })\n                }\n                disabled={isLoading}\n                size=\"small\"\n                color=\"secondary\"\n              >\n                Reset\n              </ButtonLink>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCampersThunk, getFilteredThunk } from 'store/campers/thunks';\nimport { clearFilter, setFilter } from 'store/filter/slice';\nimport {\n  selectCampersShown,\n  selectFilterValues,\n  selectIsFilterActive,\n  selectIsLoadMore,\n  selectIsLoaded,\n  selectIsLoading,\n  selectPage,\n} from 'store/selectors';\nimport { scrollToTop } from 'helpers/scrolls';\nimport { CATALOG_LIMIT, TOTAL_CAMPERS } from 'constants/campers';\nimport CampersList from 'components/CampersList/CampersList';\nimport Filter from 'components/Filter/Filter';\nimport CampersModal from 'components/CampersModal/CampersModal';\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const campers = useSelector(selectCampersShown);\n  const page = useSelector(selectPage);\n  const isLoadMore = useSelector(selectIsLoadMore);\n  const isLoading = useSelector(selectIsLoading);\n  const isLoaded = useSelector(selectIsLoaded);\n  const isFilterActive = useSelector(selectIsFilterActive);\n  const filterValues = useSelector(selectFilterValues);\n  // const error = useSelector(selectError);\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  useEffect(() => {\n    if (isLoaded) return;\n    if (isFilterActive) {\n      dispatch(\n        getFilteredThunk({ page: 1, limit: TOTAL_CAMPERS, ...filterValues })\n      );\n    } else {\n      dispatch(getCampersThunk({ page: 1, limit: CATALOG_LIMIT }));\n    }\n  }, [dispatch, filterValues, isFilterActive, isLoaded]);\n\n  const handleSearch = async values => {\n    await dispatch(\n      getFilteredThunk({ page: 1, limit: TOTAL_CAMPERS, ...values })\n    ).unwrap();\n    dispatch(setFilter(values));\n  };\n\n  const handleResetSearch = async () => {\n    await dispatch(getCampersThunk({ page: 1, limit: CATALOG_LIMIT })).unwrap();\n    dispatch(clearFilter());\n  };\n  return (\n    <div className=\"container page-container\">\n      <Filter onSearch={handleSearch} onReset={handleResetSearch} />\n      <CampersList\n        campers={campers}\n        isLoading={isLoading}\n        isLoadMore={isLoadMore}\n        onLoadMore={() =>\n          dispatch(getCampersThunk({ page: page + 1, limit: CATALOG_LIMIT }))\n        }\n      />\n      <CampersModal />\n    </div>\n  );\n};\n\nexport default CatalogPage;\n","import axios from 'axios';\n\nconst adverts = axios.create({\n  baseURL: 'https://66184bd69a41b1b3dfbcb9ce.mockapi.io/api',\n  params: {},\n});\n\nadverts.interceptors.request.use(config => {\n  config.params = {\n    ...config.params,\n  };\n  return config;\n});\n\nexport const getAdverts = async params => {\n  const { data } = await adverts.get('/adverts', {\n    params,\n  });\n  return data;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getAdverts } from 'api/adverts';\n\nexport const getCampersThunk = createAsyncThunk(\n  'campers/getCampers',\n  async params => {\n    return await getAdverts(params);\n  }\n);\n\nexport const getFilteredThunk = createAsyncThunk(\n  'campers/getFiltered',\n  async filter => {\n    const { page, limit, location, transmission, form, equipment } = filter;\n    const params = {\n      page,\n      limit,\n      location,\n      form,\n      transmission,\n    };\n    equipment.forEach(item => (params[item] = true));\n\n    return await getAdverts(params);\n  }\n);\n"],"names":["INITIAL_VALUES","location","transmission","equipment","form","_ref","onSearch","onReset","isFilterActive","useSelector","selectIsFilterActive","currentValues","selectFilterValues","isEquipmentFilterActive","selectIsEquipmentFilterActive","isLoading","selectIsLoading","_jsxs","className","css","children","_jsx","Formik","initialValues","onSubmit","values","length","every","item","includes","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","stop","_ref3","setFieldValue","resetForm","Form","Field","name","as","concat","value","disabled","hidden","LOCATIONS","idx","split","reverse","join","width","height","href","icons","type","onClick","id","role","Object","entries","EQUIPMENT_FILTER","map","_ref4","_ref5","_slicedToArray","key","ICONS","FORMS","_ref6","_ref7","ButtonLink","size","color","dispatch","useDispatch","campers","selectCampersShown","page","selectPage","isLoadMore","selectIsLoadMore","isLoaded","selectIsLoaded","filterValues","useEffect","scrollToTop","getFilteredThunk","_objectSpread","limit","TOTAL_CAMPERS","getCampersThunk","CATALOG_LIMIT","handleSearch","unwrap","setFilter","_x","apply","arguments","handleResetSearch","_ref2","_callee2","_context2","clearFilter","Filter","CampersList","onLoadMore","CampersModal","adverts","axios","baseURL","params","interceptors","request","use","config","getAdverts","_yield$adverts$get","data","get","sent","abrupt","createAsyncThunk","filter","forEach","_x2"],"sourceRoot":""}